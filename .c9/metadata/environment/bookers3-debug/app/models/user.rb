{"filter":false,"title":"user.rb","tooltip":"/bookers3-debug/app/models/user.rb","undoManager":{"mark":3,"position":3,"stack":[[{"start":{"row":11,"column":1},"end":{"row":31,"column":0},"action":"remove","lines":[" # ====================自分がフォローしているユーザーとの関連 ===================================","  #フォローする側のUserから見て、フォローされる側のUserを(中間テーブルを介して)集める。なので親はfollowing_id(フォローする側)","  has_many :active_relationships, class_name: \"Relationship\", foreign_key: :following_id","  # 中間テーブルを介して「follower」モデルのUser(フォローされた側)を集めることを「followings」と定義","  has_many :followings, through: :active_relationships, source: :follower","  # ========================================================================================","","  # ====================自分がフォローされるユーザーとの関連 ===================================","  #フォローされる側のUserから見て、フォローしてくる側のUserを(中間テーブルを介して)集める。なので親はfollower_id(フォローされる側)","  has_many :passive_relationships, class_name: \"Relationship\", foreign_key: :follower_id","  # 中間テーブルを介して「following」モデルのUser(フォローする側)を集めることを「followers」と定義","  has_many :followers, through: :passive_relationships, source: :following","  # =======================================================================================","","  def followed_by?(user)","    # 今自分(引数のuser)がフォローしようとしているユーザー(レシーバー)がフォローされているユーザー(つまりpassive)の中から、引数に渡されたユーザー(自分)がいるかどうかを調べる","    passive_relationships.find_by(following_id: user.id).present?","  end","","",""],"id":70}],[{"start":{"row":11,"column":1},"end":{"row":18,"column":66},"action":"insert","lines":[" # 自分がフォローされる（被フォロー）側の関係性","  has_many :reverse_of_relationships, class_name: \"Relationship\", foreign_key: \"followed_id\", dependent: :destroy","  # 自分がフォローする（与フォロー）側の関係性","  has_many :relationships, class_name: \"Relationship\", foreign_key: \"follower_id\", dependent: :destroy","  # 被フォロー関係を通じて参照→自分をフォローしている人","  has_many :followers, through: :reverse_of_relationships, source: :follower","  # 与フォロー関係を通じて参照→自分がフォローしている人","  has_many :followings, through: :relationships, source: :followed"],"id":71}],[{"start":{"row":19,"column":2},"end":{"row":20,"column":0},"action":"insert","lines":["",""],"id":72},{"start":{"row":20,"column":0},"end":{"row":20,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":19,"column":2},"end":{"row":29,"column":5},"action":"insert","lines":["def follow(user_id)","    relationships.create(followed_id: user_id)","  end","","  def unfollow(user_id)","    relationships.find_by(followed_id: user_id).destroy","  end","","  def following?(user)","    followings.include?(user)","  end"],"id":73}]]},"ace":{"folds":[],"scrolltop":205,"scrollleft":0,"selection":{"start":{"row":23,"column":23},"end":{"row":23,"column":23},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"hash":"46ab90ff6aba2c211565c75104395f07c892b7bf","timestamp":1602052351716}